{"ast":null,"code":"var _jsxFileName = \"/home/romain/code/react-lib-test/react-hook-basic/src/App.js\",\n  _s = $RefreshSig$();\nimport { useSession, useConversation, useCameraStream, useConversationStreams, VideoStream } from '@apirtc/react-lib';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Get a connection session to ApiRTC Video platform\n  const {\n    session\n  } = useSession({\n    apiKey: 'myDemoApiKey'\n  }); // Get an account on cloud.apirtc.com and retrieve your Api Key.\n\n  //Grab the local camera video and audio stream\n  const {\n    stream: localStream\n  } = useCameraStream(session);\n\n  // Get the conversation stateful object\n  const {\n    conversation\n  } = useConversation(session, 'conversationName', undefined, true);\n\n  // Get the list of streams exchanged in the conversation\n  const {\n    subscribedStreams\n  } = useConversationStreams(conversation, localStream ? [{\n    stream: localStream\n  }] : []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mememe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Local Streams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), localStream && /*#__PURE__*/_jsxDEV(VideoStream, {\n          stream: localStream,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"remote-streams-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Remote Streams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), subscribedStreams.map((stream, index) => {\n          return /*#__PURE__*/_jsxDEV(VideoStream, {\n            stream: stream,\n            muted: false\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UlAd8z/BOME58uOilkbZp1dby+g=\", false, function () {\n  return [useSession, useCameraStream, useConversation, useConversationStreams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSession","useConversation","useCameraStream","useConversationStreams","VideoStream","App","session","apiKey","stream","localStream","conversation","undefined","subscribedStreams","map","index"],"sources":["/home/romain/code/react-lib-test/react-hook-basic/src/App.js"],"sourcesContent":["\nimport { useSession, useConversation, useCameraStream, useConversationStreams, VideoStream } from '@apirtc/react-lib'\nimport './App.css';\n\nfunction App() {\n\n//Get a connection session to ApiRTC Video platform\nconst { session } = useSession({ apiKey: 'myDemoApiKey' }); // Get an account on cloud.apirtc.com and retrieve your Api Key.\n\n//Grab the local camera video and audio stream\nconst { stream: localStream } = useCameraStream(session);\n\n// Get the conversation stateful object\nconst { conversation } = useConversation(session, 'conversationName', undefined, true);\n\n// Get the list of streams exchanged in the conversation\nconst { subscribedStreams } = useConversationStreams(conversation, localStream ? [{ stream: localStream }] : []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"mememe-container\">\n        <h2>Local Streams</h2>\n        { localStream && <VideoStream stream={localStream} muted={true}></VideoStream> }\n        </div>\n        <div id='remote-streams-container'>\n          <h2>Remote Streams</h2>\n          { \n            subscribedStreams.map( (stream, index) =>{\n              return (<VideoStream stream={stream} muted={false} key={index}></VideoStream>)\n            })\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,UAAU,EAAEC,eAAe,EAAEC,eAAe,EAAEC,sBAAsB,EAAEC,WAAW,QAAQ,mBAAmB;AACrH,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEf;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGN,UAAU,CAAC;IAAEO,MAAM,EAAE;EAAe,CAAC,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAM;IAAEC,MAAM,EAAEC;EAAY,CAAC,GAAGP,eAAe,CAACI,OAAO,CAAC;;EAExD;EACA,MAAM;IAAEI;EAAa,CAAC,GAAGT,eAAe,CAACK,OAAO,EAAE,kBAAkB,EAAEK,SAAS,EAAE,IAAI,CAAC;;EAEtF;EACA,MAAM;IAAEC;EAAkB,CAAC,GAAGT,sBAAsB,CAACO,YAAY,EAAED,WAAW,GAAG,CAAC;IAAED,MAAM,EAAEC;EAAY,CAAC,CAAC,GAAG,EAAE,CAAC;EAG9G,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,EAAE,EAAC,kBAAkB;QAAA,wBAC1B;UAAA,UAAI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,EACpBA,WAAW,iBAAI,QAAC,WAAW;UAAC,MAAM,EAAEA,WAAY;UAAC,KAAK,EAAE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QACxE,eACN;QAAK,EAAE,EAAC,0BAA0B;QAAA,wBAChC;UAAA,UAAI;QAAc;UAAA;UAAA;UAAA;QAAA,QAAK,EAErBG,iBAAiB,CAACC,GAAG,CAAE,CAACL,MAAM,EAAEM,KAAK,KAAI;UACvC,oBAAQ,QAAC,WAAW;YAAC,MAAM,EAAEN,MAAO;YAAC,KAAK,EAAE;UAAM,GAAMM,KAAK;YAAA;YAAA;YAAA;UAAA,QAAgB;QAC/E,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAEA;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAjCQT,GAAG;EAAA,QAGQL,UAAU,EAGEE,eAAe,EAGtBD,eAAe,EAGVE,sBAAsB;AAAA;AAAA,KAZ3CE,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}