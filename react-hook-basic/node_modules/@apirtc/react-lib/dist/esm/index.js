import e,{useRef as o,useEffect as n,useState as i,useCallback as t}from"react";import{UserAgent as a}from"@apirtc/apirtc";function s(i){const{autoPlay:t=!0}=i,a=o(null);return n((()=>{const e=a.current;if(e&&i.stream)return i.stream.attachToElement(e),()=>{e.src=""}}),[i.stream]),e.createElement("video",{id:i.stream.getId(),style:{maxWidth:"100%"},ref:a,autoPlay:t,muted:i.muted})}const l="useCameraStream";function r(e,o={}){const[t,a]=i();return n((()=>{if(e){e.getUserAgent().createStream(o).then((e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(l+"|createStream",o,e),a(e)})).catch((e=>{console.error(l+"|createStream",o,e),a(void 0)}))}else a(void 0)}),[e,JSON.stringify(o)]),n((()=>()=>{t&&(globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(l+"|release stream",t),t.release())}),[t]),{stream:t}}const c="useConversation";function b(e,o,a,s=!1){const[l,r]=i(),[b,g]=i(!1),[d,u]=i(!1),L=t((()=>(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|join",l),new Promise(((e,o)=>{l?l.isJoined()?o(c+"|join|conversation already joined"):(u(!0),l.join().then((()=>{g(!0),e()})).catch((e=>{o(e)})).finally((()=>{u(!1)}))):o(c+"|join|conversation not defined")})))),[l]),f=t((()=>(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|leave",l),new Promise(((e,o)=>{l?l.isJoined()?l.leave().then((()=>{g(!1),e()})).catch((e=>{o(e)})):o(c+"|leave|conversation is not joined"):o(c+"|leave|conversation not defined")})))),[l]);return n((()=>{if(e&&o){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|getOrCreateConversation",o,a,s);const n=e.getOrCreateConversation(o,a);return r(n),()=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|useEffect cleanup",o,a,s),n.isJoined()?n.leave().then((()=>{})).catch((e=>{globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(c+"|useEffect conversation.leave()",e)})).finally((()=>{n.destroy(),r(void 0),g(!1)})):(n.destroy(),r(void 0))}}}),[e,o,JSON.stringify(a)]),n((()=>{if(l&&s){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|useEffect",l,s);const e=l,o=s;return o&&(u(!0),e.join().then((()=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(c+"|joined",e),g(!0)})).catch((e=>{globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(c+"|useEffect conversation.join()",e)})).finally((()=>{u(!1)}))),()=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(c+"|useEffect cleanup",e,o),e.isJoined()&&e.leave().then((()=>{g(!1)})).catch((e=>{globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(c+"|useEffect conversation.leave()",e)}))}}}),[l,s]),{conversation:l,joining:d,joined:b,join:L,leave:f}}const g="useConversationMessages";function d(e){const[o]=i(new Array),[a,s]=i(new Array);n((()=>{if(e){const n=n=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(g+"|on:message:",e.getName(),n),o.push(n),s(Array.from(o))};return e.on("message",n),()=>{e.removeListener("message",n),o.length=0,s(new Array)}}}),[e]);return{messages:a,sendMessage:t(((n,i)=>new Promise(((t,a)=>{null==e||e.sendMessage(n).then((a=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(g+"|sentMessage",e.getName(),a,n),o.push({content:n,sender:i,time:new Date}),s(Array.from(o)),t()})).catch((e=>{globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(g+"|sendMessage error",e),a(e)}))}))),[e])}}const u="useConversationModeration";function L(e,o,t){const[a,s]=i(new Set);return n((()=>{if(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(u+"|useEffect conversation",e),e){const n=e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(u+"|on:contactJoinedWaitingRoom",e),a.add(e),s(new Set(a))},i=e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(u+"|on:contactLeftWaitingRoom",e),a.delete(e),s(new Set(a))},l=e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(u+"|on:participantEjected",e),!0===e.self?(globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(u+"|Self participant was ejected"),t&&t()):o&&o(e.contact)};return e.on("contactJoinedWaitingRoom",n).on("contactLeftWaitingRoom",i).on("participantEjected",l),()=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(u+"|conversation clear",e),e.removeListener("contactJoinedWaitingRoom",n).removeListener("contactLeftWaitingRoom",i).removeListener("participantEjected",l),s(new Set)}}}),[e]),{candidates:a}}function f(e){return null!=e}const p="useConversationStreams";function h(e,o=[],a){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|hook`);const[s,l]=i([]),[r]=i(new Array),[c,b]=i(new Array),[g]=i(new Array),[d,u]=i(new Array),L=t(((o,n)=>new Promise(((i,t)=>{e&&(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|publish|${e.getName()}`,o,n),e.publish(o,n).then((o=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(`${p}|published|${e.getName()}`,o),r.push(o),b(Array.from(r)),i(o)})).catch((e=>{t(e)})))}))),[e]),h=t(((o,n,i)=>new Promise(((t,a)=>{if(e){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|replacePublishedStream|${e.getName()}|${o.getId()} -> ${n.getId()}(${JSON.stringify(i)})`);const s=e.getConversationCall(o);s&&s.replacePublishedStream(n,void 0,i).then((n=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(`${p}|stream replaced|${e.getName()}`,o,n,i);const a=r.indexOf(o);a>=0&&(r.splice(a,1,n),b(Array.from(r))),t(n)})).catch((e=>{a(e)}))}}))),[e]),v=t((o=>{if(e){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|unpublish|${e.getName()}`,o),e.unpublish(o);const n=r.indexOf(o);n>=0&&(r.splice(n,1),b(Array.from(r)))}}),[e]),m=t((()=>{const n=Math.max(s.length,o.length);globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(p+"|doHandlePublication",o,JSON.stringify(s.map((e=>null==e?void 0:e.stream.getId()))),n);const i=[...o];l(i);const t=new Set(o.filter(f).map((e=>e.stream)));for(let l=0;l<n;l++){const n=s[l],r=o[l];if(n&&r){const o=()=>{h(n.stream,r.stream,r.options).catch((e=>{i.splice(l,1,null),a?a(e):globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(`${p}|replacePublishedStream|error`,e)}))};n.stream===r.stream?JSON.stringify(n.options)!==JSON.stringify(r.options)&&o():t.has(n.stream)?e&&!e.isPublishedStream(r.stream)&&L(r.stream,r.options).catch((e=>{i.splice(l,1,null),a?a(e):globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(`${p}|publish|error`,e)})):e&&!e.isPublishedStream(r.stream)?o():v(n.stream)}else n&&!r?t.has(n.stream)||v(n.stream):!n&&r&&e&&!e.isPublishedStream(r.stream)&&L(r.stream,r.options).catch((e=>{i.splice(l,1,null),a?a(e):globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(`${p}|publish|error`,e)}))}}),[e,o,s,L,v,h]);n((()=>{if(e){const o=e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(p+"|on_streamAdded",e),g.push(e),u(Array.from(g))},n=e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(p+"|on_streamRemoved",e);const o=g.indexOf(e);o>=0&&(g.splice(o,1),u(Array.from(g)))},i=o=>{const n=String(o.streamId);!0===o.isRemote&&("added"===o.listEventType?e.subscribeToStream(n):"removed"===o.listEventType&&e.unsubscribeToStream(n))};return e.on("streamAdded",o),e.on("streamRemoved",n),e.on("streamListChanged",i),()=>{e.removeListener("streamListChanged",i),e.removeListener("streamRemoved",n),e.removeListener("streamAdded",o)}}}),[e]);const E=e=>{r.forEach((o=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(p+"|unpublish stream",e,o),e.unpublish(o)})),r.length=0,l([]),g.forEach((o=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(p+"|unsubscribeToStream stream",e,o),e.unsubscribeToStream(o.getId())})),g.length=0,b(new Array),u(new Array)};return n((()=>{if(e){globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(p+"|useEffect doHandlePublication",e.getName());const n=()=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(p+"|on_joined",e.getName(),o),m()},i=()=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(p+"|on_left",e.getName()),E(e)};return e.on("joined",n),e.on("left",i),()=>{e.removeListener("joined",n),e.removeListener("left",i)}}}),[m]),n((()=>{if(e)return globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|conversation|${e.getName()}`,e),e.getAvailableStreamList().forEach((o=>{const n=String(o.streamId);!0===o.isRemote&&e.subscribeToStream(n)})),()=>{E(e)}}),[e]),n((()=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(`${p}|streamsToPublish`,JSON.stringify(o.map((e=>(null==e?void 0:e.stream.getId())+"-"+JSON.stringify(null==e?void 0:e.options))))),e&&e.isJoined()&&m()}),[JSON.stringify(o.map((e=>(null==e?void 0:e.stream.getId())+"-"+JSON.stringify(null==e?void 0:e.options))))]),{publishedStreams:c,subscribedStreams:d,publish:L,unpublish:v,replacePublishedStream:h}}const v="usePresence";function m(e,o){const[t]=i(new Set),[a]=i(new Map),[s,l]=i(new Map);n((()=>{if(e)return()=>{a.clear(),l(new Map(a)),t.clear()}}),[e]);const r=e=>{var o;const n=null!==(o=a.get(e))&&void 0!==o?o:new Set;return a.has(e)||a.set(e,n),n};return n((()=>{if(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(v+"|useEffect session, groups",o),e){const n=e,i=new Set(o);i.forEach((e=>{t.has(e)||(globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(v+"|subscribeToGroup",e),t.add(e),n.subscribeToGroup(e))}));let s=!1;if(t.forEach((e=>{i.has(e)||(globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(v+"|unsubscribeToGroup",e),n.unsubscribeToGroup(e),t.delete(e),a.delete(e),s=!0)})),s&&l(new Map(a)),o.length>0){const e=e=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(v+"|contactListUpdate",e);let o=!1;for(const n of Object.keys(e.joinedGroup))if(i.has(n)){const i=r(n);for(const t of e.joinedGroup[n])i.add(t),o=!0}for(const n of Object.keys(e.leftGroup))if(i.has(n)){const i=r(n);for(const t of e.leftGroup[n])i.delete(t),o=!0,0===i.size&&a.delete(n)}for(const n of e.userDataChanged)for(const e of a.values())if(e.has(n)){o=!0;break}o&&l(new Map(a))};return n.on("contactListUpdate",e),()=>{n.removeListener("contactListUpdate",e)}}}}),[e,JSON.stringify(o)]),{contactsByGroup:s}}const E="useSession";function T(e,o){const[t,s]=i(),[l,r]=i(!1),[c,b]=i();n((()=>{if(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(E+"|useEffect credentials, options",e,o),e){let n=!0;return g(e,o).catch((e=>{console.error(E+"|connection failed",e,n),s(void 0),n&&b(e)})),()=>{n=!1,s(void 0),r(!1),b(void 0)}}}),[JSON.stringify(e),JSON.stringify(o)]),n((()=>{if(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(E+"|useEffect session",t),t){const e=t;return()=>{e.disconnect().then((()=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(E+"|disconnected",e)})).catch((e=>{console.error(E+"|disconnect",e)}))}}}),[t]);const g=(e,o)=>new Promise(((n,i)=>{const t=o||{cloudUrl:"https://cloud.apirtc.com"};let l;if("object"==typeof(c=e)&&"username"in c)t.password=e.password,l=new a({uri:"apirtc:"+e.username});else if(function(e){return"object"==typeof e&&"apiKey"in e}(e))l=new a({uri:`apiKey:${e.apiKey}`});else{if(!function(e){return"object"==typeof e&&"token"in e}(e))return void i("credentials not recognized");l=new a({uri:`token:${e.token}`})}var c;r(!0),l.register(t).then((e=>{globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info(E+"|connected",e),s(e),n()})).catch((e=>{i(e)})).finally((()=>{r(!1)}))}));return{session:t,connecting:l,connect:g,disconnect:()=>{s(void 0)},error:c}}const R="useStreamApplyVideoProcessor";function y(e,o,a,s){const[l,r]=i(e),[c,b]=i("none");n((()=>{globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(R+"|useEffect",e,o,a),e&&"none"!==o?e.applyVideoProcessor(o,a).then((e=>{r(e),b(o)})).catch((n=>{r(e),s?s(n):globalThis.apirtcReactLibLogLevel.isWarnEnabled&&console.warn(R+"|useEffect",e,o,a,n),b((e=>e))})):(r(e),b("none"))}),[e,o,a]);const g=t((()=>{l&&l!==e&&(globalThis.apirtcReactLibLogLevel.isDebugEnabled&&console.debug(R+"|releasing outStream",l),l.release())}),[e,l]);return n((()=>()=>{g()}),[l]),{stream:l,applied:c}}const S={audioinput:{},audiooutput:{},videoinput:{}};function w(e){const[o,t]=i(S);return n((()=>{if(e){const o=e.getUserAgent(),n=()=>{const e=o.getUserMediaDevices();globalThis.apirtcReactLibLogLevel.isInfoEnabled&&console.info("useUserMediaDevices|mediaDeviceChanged",e),t(e)};return o.on("mediaDeviceChanged",n),()=>{o.removeListener("mediaDeviceChanged",n),t(S)}}}),[e]),{userMediaDevices:o}}const D={level:"info",isDebugEnabled:!1,isInfoEnabled:!0,isWarnEnabled:!0};function I(e){switch(e){case"debug":globalThis.apirtcReactLibLogLevel={level:"debug",isDebugEnabled:!0,isInfoEnabled:!0,isWarnEnabled:!0};break;case"info":default:globalThis.apirtcReactLibLogLevel=D;break;case"warn":globalThis.apirtcReactLibLogLevel={level:"warn",isDebugEnabled:!1,isInfoEnabled:!1,isWarnEnabled:!0};break;case"error":globalThis.apirtcReactLibLogLevel={level:"error",isDebugEnabled:!1,isInfoEnabled:!1,isWarnEnabled:!1}}return globalThis.apirtcReactLibLogLevel}globalThis.apirtcReactLibLogLevel=D,globalThis.setApirtcReactLibLogLevel=I;export{s as VideoStream,I as setLogLevel,r as useCameraStream,b as useConversation,d as useConversationMessages,L as useConversationModeration,h as useConversationStreams,m as usePresence,T as useSession,y as useStreamApplyVideoProcessor,w as useUserMediaDevices};
//# sourceMappingURL=index.js.map
